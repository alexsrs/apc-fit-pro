generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  perfil        UserPerfil?  // Relação 1:1 (um User tem um UserPerfil)
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model UserPerfil {
  id              String        @id @default(uuid())
  role            String     @default("aluno")
  telefone        String?
  dataNascimento  DateTime
  genero          String
  professorId     String?       // Permitir null
  grupoId         String?       // Permitir null
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  userId          String     @unique
  user            User       @relation(fields: [userId], references: [id], onDelete: Cascade)

  gruposCriados   Grupo[]    @relation("GrupoCriado")
  professor       UserPerfil? @relation("ProfessorAluno", fields: [professorId], references: [id])
  alunos          UserPerfil[] @relation("ProfessorAluno")
  grupos          Grupo[]    @relation("MembroGrupo")
}

model Grupo {
  id          String   @id @default(uuid()) // Alterado para usar uuid()
  nome        String
  criadoPorId String?  // Referência opcional ao UserPerfil do professor
  criadoPor   UserPerfil? @relation(fields: [criadoPorId], references: [id], onDelete: SetNull, name: "GrupoCriado")
  membros     UserPerfil[] @relation("MembroGrupo")
}

